@rendermode InteractiveServer
@page "/"
@using PersonalDeskThing.App.Client.Interfaces
@using PersonalDeskThing.App.Commands
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@inject SpotifyAuthService SpotifyAuthService


<PageTitle>Home</PageTitle>
<MudAppBar Color="Color.Primary" Fixed="false">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" />
    <MudSpacer />
</MudAppBar>
<br/>
<br />

@if (service == null){
    <MudDialog Visible="@showLoginDialog">
        <TitleContent>
            <MudText Typo="Typo.h5">Connexion à Spotify</MudText>
        </TitleContent>
        <DialogContent>
            <MudText Typo="Typo.body1">Vous devez être connecté à Spotify pour utiliser cette application.</MudText>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" Href="/auth">Se connecter</MudButton>
        </DialogActions>
    </MudDialog>
}
else{
    <DeskThing Player="@service" Actions="@actions"/>
}

@code {
    SpotifyService? service;
    bool showLoginDialog = false;
    List<IAction> actions = null!;

    protected override async Task OnInitializedAsync()
    {
        actions = new List<IAction>()
        {
            new LaunchApp(@"C:\ProgramData\PersonalDeskThing\Links\Spotify.lnk", new Uri("https://storage.googleapis.com/pr-newsroom-wp/1/2023/05/Spotify_Primary_Logo_RGB_Green.png")),
            new LaunchApp(@"C:\ProgramData\PersonalDeskThing\Links\Discord.lnk", new Uri("https://cdn-icons-png.flaticon.com/512/5968/5968756.png"))
        };
        var tempService = await SpotifyAuthService.CreateFromCache();

        if (tempService == null)
        {
            showLoginDialog = true;
            return;
        }

        var isStillConnected = await tempService.GetIsStillConnected();

        if (!isStillConnected)
        {
            showLoginDialog = true;
            return;
        }

        service = tempService;
    }
}